<?php
/**
 * @file
 * Tests for google_directions_link.module.
 */

/**
 * Functionality tests of the google_directions_link module.
 *
 * @ingroup google_directions_link
 */
class GoogleDirectionsLinkTestCase extends DrupalWebTestCase {

  /**
   * {@inheritdoc}
   */
  public static function getInfo() {
    return array(
      'name'  => 'Google Directions Link',
      'description'  => "Test the google directions link formatter of geofield.",
      'group' => 'Geofield',
    );
  }

  /**
   * {@inheritdoc}
   */
  public function setUp() {
    parent::setUp(array('google_directions_link'));
    // Create and log in our privileged user.
    $this->privileged_user = $this->drupalCreateUser(array('create article content'));
    $this->drupalLogin($this->privileged_user);
  }

  /**
   * Tests the formatting of the geofield as a google directions link.
   */
  public function testGoogleDirectionsLinkFormatter() {
    // Setup a field and instance.
    $this->field_name = 'field_' . drupal_strtolower($this->randomName());
    $this->field = array('field_name' => $this->field_name, 'type' => 'geofield');
    field_create_field($this->field);
    $field_text = $this->randomName(8);
    $this->instance = array(
      'field_name' => $this->field_name,
      'entity_type' => 'node',
      'bundle' => 'article',
      'label' => $this->field_name . '_label',
      'settings' => array(),
      'widget' => array(
        'type' => 'geofield_latlon',
      ),
      'display' => array(
        'default' => array(
          'type' => 'google_directions_link_link',
          'settings' => array(
            'text' => $field_text,
            'user_current' => FALSE,
          ),
        ),
      ),
    );
    field_create_instance($this->instance);

    $edit['title'] = $this->randomName(8);
    // Display creation form.
    $langcode = LANGUAGE_NONE;
    include_once drupal_get_path('module', 'geofield') . '/includes/GeoGenerator.php';
    $generator = new GeoGenerator();
    $point = $generator->random_point();
    geophp_load();
    $geometry = new Point($point[0], $point[1]);
    $edit += array(
      "{$this->field_name}[$langcode][0][geom][lat]" => $geometry->getY(),
      "{$this->field_name}[$langcode][0][geom][lon]" => $geometry->getX(),
    );

    $latlon = number_format($geometry->getY(), 12) . ',' . number_format($geometry->getX(), 12);

    $this->drupalPost('node/add/article', $edit, t('Save'));
    // preg_match('|test-entity/manage/(\d+)/edit|', $this->url, $match);
    $link = l(
      $field_text,
      'https://www.google.com/maps/dir/' . $latlon,
      array(
        'attributes' => array(
          'alt' => $field_text,
          'class' => array('google-directions-link'),
        ),
      )
    );
    $this->assertRaw($link, 'Link is displaying');
  }

}
